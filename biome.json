{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "vcs": { "enabled": false, "clientKind": "git", "useIgnoreFile": false },
  "files": { "ignoreUnknown": false, "ignore": [] },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "formatWithErrors": false,
    "ignore": ["*.spec.tsx", "*.spec.ts"],
    "indentWidth": 2,
    "lineWidth": 80
  },
  "organizeImports": { "enabled": true },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": false,
      "complexity": {
        "noBannedTypes": "off",
        "noExtraBooleanCast": "error",
        "noMultipleSpacesInRegularExpressionLiterals": "error",
        "noUselessCatch": "error",
        "noUselessThisAlias": "off",
        "noUselessTypeConstraint": "error",
        "noWith": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidConstructorSuper": "error",
        "noNewSymbol": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "off",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "off",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useYield": "error"
      },
      "style": {
        "noInferrableTypes": "off",
        "noNamespace": "off",
        "noNonNullAssertion": "off",
        "useAsConstAssertion": "error",
        "useImportType": "warn"
      },
      "suspicious": {
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noConsole": "off",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noEmptyInterface": "off",
        "noExplicitAny": "off",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "useGetterReturn": "error",
        "useValidTypeof": "error"
      }
    },
    "ignore": [
      "**/*.log",
      "**/.DS_Store",
      "**/*.",
      ".vscode/settings.json",
      "**/.history",
      "**/.yarn",
      "**/bazel-*",
      "**/bazel-bin",
      "**/bazel-out",
      "**/bazel-qwik",
      "**/bazel-testlogs",
      "**/dist",
      "**/dist-dev",
      "**/lib",
      "**/lib-types",
      "**/etc",
      "**/external",
      "**/node_modules",
      "**/temp",
      "**/tsc-out",
      "**/tsdoc-metadata.json",
      "**/target",
      "**/output",
      "**/rollup.config.js",
      "**/build",
      "**/.cache",
      "**/.vscode",
      "**/.rollup.cache",
      "**/tsconfig.tsbuildinfo",
      "**/vite.config.ts",
      "**/*.spec.tsx",
      "**/*.spec.ts",
      "**/.netlify",
      "**/pnpm-lock.yaml",
      "**/package-lock.json",
      "**/yarn.lock",
      "**/server"
    ]
  },
  "javascript": { "formatter": { "quoteStyle": "double" } }
}
